@startuml


skinparam style strictuml

skinparam lifelineStrategy solid

skinparam ParticipantPadding 70

skinparam BoxPadding 10

autonumber

actor User as User


participant main as main



box "route" #lightBlue

participant AuthRoute as AuthRoute

end box


box "controller" #LightGoldenRodYellow
participant AuthController as AuthController

end box


box "model" #lightBlue
participant UserModel as UserModel
participant ResetTokenModel as ResetTokenModel

end box


User -> main: Request to reset password
activate User
activate main

main -> AuthRoute: POST api/reset-password/reset
activate AuthRoute

note right of main #Aqua
  * Request param:
  Content type: application/json
  Request content:
  - resetToken: String
  - password: String
  - confirm_password: String
  - email: String
end note

AuthRoute -> AuthController: resetPassword(req, res)
note right of AuthRoute #Aqua
  * Request param:
  { resetToken, password,
  confirm_password, email }
   = req.body
end note
activate AuthController

AuthController -> ResetTokenModel: findOne()
note right of AuthController #Aqua
  * Request param:
  - token: req.resetToken
end note

activate ResetTokenModel

ResetTokenModel --> AuthController: return resetTokenData
deactivate ResetTokenModel
opt resetTokenData not exist
  AuthController --> AuthRoute: return response error
end

opt resetTokenData has expired
  AuthController --> ResetTokenModel: destroy()
  activate ResetTokenModel
  ResetTokenModel --> AuthController: return
  deactivate ResetTokenModel
  AuthController --> AuthRoute: return response error
end

AuthController -> UserModel: findOne()
note right of AuthController #Aqua
* Request param:
 - user_id: resetTokenData.user_id
end note
activate UserModel
UserModel --> AuthController: return user
deactivate UserModel
opt user not exist
  AuthController --> AuthRoute: return response error
end

opt email in the request body does not matches the user's email
  AuthController --> AuthRoute: return response error
end

opt password and confirm_password does not match
  AuthController --> AuthRoute: return response error
end

AuthController -> AuthController: hash password
AuthController -> AuthController: update new password to user model

AuthController -> UserModel: save()

activate UserModel

UserModel --> AuthController: return 

deactivate UserModel

AuthController --> AuthRoute: return response

deactivate AuthController

AuthRoute --> main: return password

deactivate AuthRoute

main --> User: return response

deactivate main
deactivate User




@enduml
